@model IQueryable<DemoWithSQL.Models.Fruits>

@{
    ViewBag.Title = "SQL_Fruits_Index";
}



<script>
    function getDetails(obj)
    {
        $(obj).children("#showDetails").css("display", "block");
    };
    function mouseleft(obj)
    {
        $(obj).children("#showDetails").css("display", "none");
    };

    

</script>

<table style="width:100%;">
    <tr>
        <td><h4>This page shows how to use ajax do search and paging.</h4></td>
        <td align="right">@Html.ActionLink("Create New", "SQL_Fruits_Create", "SQLServer")</td>
    </tr>
</table>

<div id="searchdiv">
    23
</div>
<br />
<table class="table">
    <tr>
        <td>FruitKey</td>
        <td>Name</td>
        <td>Price</td>
        <td>Description</td>
        <td>Message</td>
        <td>CreateDate</td>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>@Html.DisplayFor(model => item.FruitKey)</td>
            <td>@Html.DisplayFor(model => item.Name)</td>
            <td>@Html.DisplayFor(model => item.Price)</td>
            <td>@Html.DisplayFor(model => item.Description)</td>
            <td onmouseover="getDetails(this)" onmouseout="mouseleft(this)">
                <p style="overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:390px">
                    @Html.DisplayFor(model => item.Message)
                </p>
                @if (item.Message != null && item.Message != "")
                {
                    <p id="showDetails" style="display:none;position:absolute;background-color:#eeeeee;padding:4px;border:1px solid black;width:430px;word-break:break-all;">
                        @Html.DisplayFor(model => item.Message)
                    </p>
                }
            </td>
            <td>@Html.DisplayFor(model => item.CreateDate)</td>
        </tr>
    }
</table>

<div></div>


